<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>