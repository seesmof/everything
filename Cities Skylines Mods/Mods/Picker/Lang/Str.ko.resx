<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="options_ResetButtonPosition" xml:space="preserve">
    <value>Picker 버튼 위치 초기화</value>
  </data>
  <data name="options_SetFRTMode" xml:space="preserve">
    <value>Network Anarchy 또는 Fine Road Tool에서 지상/고가/기타 모드 설정</value>
  </data>
  <data name="options_SetFRTMode_Tooltip" xml:space="preserve">
    <value>Network Anarchy 또는 FRT가 활성화된 경우, 선택된 세그먼트와 일치하도록 Picker가 지상/고가/기타 등 을 설정할까요?
이 방식을 반전하려면 Shift키를 누른 상태에서 클릭하세요.</value>
    <comment>Try to keep each line length approximately the same length as in English, even if this requires a different number of lines.</comment>
  </data>
  <data name="options_OpenMenu" xml:space="preserve">
    <value>메뉴에서 선택한 항목을 열기</value>
  </data>
  <data name="options_OpenMenu_Tooltip" xml:space="preserve">
    <value>메뉴(Find It 포함) 를 열까요?
이 옵션이 활성화된 상태에서 이 기능을 사용하지 않으려면 클릭하면서 Control 키를 누르고 있으세요.</value>
    <comment>Try to keep each line length approximately the same length as in English, even if this requires a different number of lines.</comment>
  </data>
  <data name="options_NotFound" xml:space="preserve">
    <value>찾을 수 없음</value>
  </data>
  <data name="options_Found" xml:space="preserve">
    <value>발견</value>
  </data>
  <data name="options_Unknown" xml:space="preserve">
    <value>알 수 없음</value>
  </data>
  <data name="mod_Description" xml:space="preserve">
    <value>지도의 어떠한 물체라도 찾아보자! Elektrix와 Quboid 제작.</value>
  </data>
  <data name="keybind_ToggleTool" xml:space="preserve">
    <value>토글 도구</value>
  </data>
  <data name="options_OpenMenuNetworks" xml:space="preserve">
    <value>네트워크에만 적용</value>
  </data>
  <data name="options_UseUUI" xml:space="preserve">
    <value>UnifiedUI 사용</value>
    <comment>Do not translate 'UnifiedUI'</comment>
  </data>
  <data name="key_pressAnyKey" xml:space="preserve">
    <value>아무 키나 누르세요</value>
  </data>
  <data name="options_VerticalIcons" xml:space="preserve">
    <value>아이콘을 수직으로 정렬</value>
  </data>
  <data name="options_IconsLarge" xml:space="preserve">
    <value>큼</value>
  </data>
  <data name="options_IconsMedium" xml:space="preserve">
    <value>보통</value>
  </data>
  <data name="options_IconsSmall" xml:space="preserve">
    <value>작음</value>
  </data>
  <data name="options_IconsTiny" xml:space="preserve">
    <value>매우 작음</value>
  </data>
  <data name="options_IconsLabel" xml:space="preserve">
    <value>최근 아이템 목록 아이콘의 크기</value>
  </data>
</root>